<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/Users/erics/OneDrive/Desktop/OKC Coders Fall 2019/company_employees_plus.db" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><current_tab id="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="200"/><column_width id="3" width="2565"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="continent_master"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="continent_master" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk=""><sort/><column_widths/><filter_values/><display_formats/><hidden_columns/><plot_y_axes/></table><table schema="main" name="country_master" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk=""><sort/><column_widths/><filter_values/><display_formats/><hidden_columns/><plot_y_axes/></table><table schema="main" name="employees" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk=""><sort/><column_widths/><filter_values/><display_formats/><hidden_columns/><plot_y_axes/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1">--Inner join example
SELECT 
	ct.country,
	ct.continent,
	ct.population as country_pop,
	cn.population as continent_pop
FROM country_master as ct
	INNER JOIN continent_master as cn ON cn.name = ct.continent


	
--join multiple and call a refined table	
SELECT 
	e.first_name,
	e.last_name,
	e.company,
	ct.population as country_pop,
	cn.population as continent_pop,
	(cn.population*1.0)/ct.population as ratio_pop
FROM employees as e
	INNER JOIN country_master as ct ON ct.country = e.country
	INNER JOIN continent_master as cn ON cn.name = ct.continent
	
	

--INNER JOIN and run functions connecting multiple things based off of a group
SELECT cn.name, count(*), avg(e.total_worth)
FROM employees as e
	INNER JOIN country_master as ct ON ct.country = e.country
	INNER JOIN continent_master as cn ON cn.name = ct.continent
GROUP BY cn.name


--LEFT join
SELECT *
FROM continent_master as cn
	LEFT JOIN country_master as ct ON cn.name = ct.continent

	
--Non sensical stack with using same table
SELECT ct.country, ct.population, ct2.country, ct2.population
FROM country_master as ct
	INNER JOIN country_master as ct2 ON ct.country &lt;&gt; ct2.country


--Cross join, where they do and don't join. All combinations. Don't need an 'ON'
SELECT *
FROM country_master as ct
	CROSS JOIN	country_master as ct2
	
	
	

	
</sql><current_tab id="0"/></tab_sql></sqlb_project>
